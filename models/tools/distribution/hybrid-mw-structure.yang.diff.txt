diff --git a/models/tools/distribution/hybrid-mw-structure.yang b/models/tools/distribution/hybrid-mw-structure.yang
index b27e1fa7..f439c50f 100644
--- a/models/tools/distribution/hybrid-mw-structure.yang
+++ b/models/tools/distribution/hybrid-mw-structure.yang
@@ -29,7 +29,7 @@ module hybrid-mw-structure {
      See the License for the specific language governing permissions and
      limitations under the License.";
 
-  revision 2019-06-25 {
+  revision 2019-07-08 {
     description
       "Model for the Transport SDN Pilot at Telefonica Germany.
        Please view https://github.com/openBackhaul/hybridMwStructure/issues for changes.";
@@ -76,17 +76,17 @@ module hybrid-mw-structure {
       type string;
       config false;
       description
-        "ID of the affected MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac.";
+        "none";
     }
     leaf object-type {
       type string;
       default "Type of created object not specified.";
       config false;
       description
-        "Type of Object to be chosen from the following list of values: 'MW_AirInterface_Pac', 'MW_AirInterfaceDiversity_Pac', 'MW_Structure_Pac', 'MW_PureEthernetStructure_Pac', 'MW_HybridMwStructure_Pac', 'MW_Container_Pac', 'MW_EthernetContainer_Pac' or 'MW_TdmContainer_Pac'.";
+        "none";
     }
     description
-      "To be sent when a new MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac has to be instancieted in the controller.";
+      "none";
   }
 
   notification object-deletion-notification {
@@ -114,10 +114,10 @@ module hybrid-mw-structure {
       type string;
       config false;
       description
-        "ID of the affected MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac.";
+        "none";
     }
     description
-      "To be sent when a new MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac instance has to be deleted in the controller.";
+      "none";
   }
 
   notification attribute-value-changed-notification {
@@ -145,7 +145,7 @@ module hybrid-mw-structure {
       type string;
       config false;
       description
-        "ID of the affected MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac.";
+        "none";
     }
     leaf attribute-name {
       type string;
@@ -162,7 +162,7 @@ module hybrid-mw-structure {
         "Attribute value converted to a string (xml, json, ...)";
     }
     description
-      "To be sent when an attribute has changed and one or more controllers have to update their data.";
+      "none";
   }
 
   notification problem-notification {
@@ -190,23 +190,23 @@ module hybrid-mw-structure {
       type string;
       config false;
       description
-        "ID of the affected MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac.";
+        "none";
     }
     leaf problem {
       type string;
       default "Problem name not specified.";
       config false;
       description
-        "Name of the problem according to AirInterface::AirInterfaceCapability::supportedAlarms or AirInterfaceDiversity::AirInterfaceDiversityCapability::supportedAlarms or Structure::StructureCapability::supportedAlarms or PureEthernetStructure::PureEthernetStructureCapability::supportedAlarms or HybridMwStructure::HybridMwStructureCapability::supportedAlarms or Container::ContainerCapability::supportedAlarms or EthernetContainer::EthernetContainerCapability::supportedAlarms or TdmContainer::TdmContainerCapability::supportedAlarms.";
+        "Name of the problem according to supportedAlarmList";
     }
     leaf severity {
       type severity-type;
       config false;
       description
-        "Severity of the problem according to AirInterface::AirInterfaceConfiguration::problemSeverityList, AirInterfaceDiversity::AirInterfaceDiversityConfiguration::problemSeverityList, Structure::StructureConfiguration::problemSeverityList, PureEthernetStructure::PureEthernetStructureConfiguration::problemSeverityList, HybridMwStructure::HybridMwStructureConfiguration::problemSeverityList, Container::ContainerConfiguration::problemSeverityList, EthernetContainer::EthernetContainerConfiguration::problemSeverityList or TdmContainer::TdmContainerConfiguration::problemSeverityList";
+        "Severity of the problem according to problemKindSeverity";
     }
     description
-      "To be sent when a problem occurs at a MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac.";
+      "none";
   }
 
   grouping current-problem {
@@ -269,7 +269,7 @@ module hybrid-mw-structure {
         "none";
     }
     leaf operational-state {
-      type operational-state;
+      type operational-state-type;
       config false;
       description
         "none";
@@ -281,7 +281,7 @@ module hybrid-mw-structure {
         "Time period between reset of the underlying counter.";
     }
     leaf administrative-state {
-      type administrative-state;
+      type administrative-state-type;
       config false;
       description
         "none";
@@ -426,6 +426,7 @@ module hybrid-mw-structure {
     list supported-tdm-structure-kind-list {
       key "tdm-structure-name";
       config false;
+      min-elements 1;
       uses tdm-structure-kind;
       description
         "Lists the TDM frame types that are supported.";
@@ -434,7 +435,7 @@ module hybrid-mw-structure {
       type string;
       config false;
       description
-        "Available alarms to be listed. Mandatory:non. Names are to be separated by commas. Further alarms might be added by the vendor.";
+        "Available alarms to be listed. Mandatory:none. Names are to be separated by commas. Further alarms might be added by the vendor.";
     }
     leaf performance-monitoring-is-avail {
       type boolean;
@@ -447,8 +448,10 @@ module hybrid-mw-structure {
   }
 
   grouping hybrid-mw-structure-configuration {
-    container tdm-structure-kind {
-      uses tdm-structure-kind;
+    leaf tdm-structure-kind {
+      type leafref {
+        path "/core-model:control-construct/core-model:logical-termination-point/core-model:layer-protocol/hybrid-mw-structure:hybrid-mw-structure-pac/hybrid-mw-structure:hybrid-mw-structure-capability/hybrid-mw-structure:supported-tdm-structure-kind-list/hybrid-mw-structure:tdm-structure-name";
+      }
       description
         "TDM frame to be applied.";
     }
@@ -458,12 +461,14 @@ module hybrid-mw-structure {
       description
         "Allows to configure the number of segments reserved for TDM frames of the type specified in HybridMwStructure::HybridMwStructureConfiguration::structureType";
     }
-    leaf performance-monitoring-collection-is-on {
-      type boolean;
+    list problem-kind-severity-list {
+      key "problem-kind-name";
+      uses problem-kind-severity-type;
       description
-        "Enables measurement, collection, storage and access to performance data.";
+        "Severity of the type of problem to be configured.";
     }
     list g-826-threshold-cross-alarm-list {
+      key "g-826-value-kind";
       max-elements 6;
       uses g-826-threshold-cross-alarm-type;
       description
@@ -474,11 +479,10 @@ module hybrid-mw-structure {
       description
         "Setting this bit is clearing all the currently active threshold cross alarms.";
     }
-    list problem-kind-severity-list {
-      key "problem-kind-name";
-      uses problem-kind-severity-type;
+    leaf performance-monitoring-is-on {
+      type boolean;
       description
-        "Severity of the type of problem to be configured.";
+        "Enables measurement, collection, storage and access to performance data.";
     }
     description
       "none";
@@ -488,10 +492,17 @@ module hybrid-mw-structure {
     list segment-status-list {
       key "segment-status-type-id";
       config false;
+      min-elements 1;
       uses segment-status-type;
       description
         "Status of each segment (all TDM and one Ethernet). Multiplicity = HybridMwStructure::StructureConfiguration::tdmReservedNumberOfSegments + 1";
     }
+    leaf performance-monitoring-is-up {
+      type boolean;
+      config false;
+      description
+        "1 = Performance values are currently collected and aggregated.";
+    }
     description
       "none";
   }
@@ -512,6 +523,7 @@ module hybrid-mw-structure {
     list current-performance-data-list {
       key "granularity-period";
       config false;
+      min-elements 1;
       max-elements 2;
       uses structure-current-performance-type;
       description
@@ -673,54 +685,54 @@ module hybrid-mw-structure {
       "none";
   }
 
-  identity OPERATIONAL_STATE {
+  identity OPERATIONAL_STATE_TYPE {
     description
       "none";
   }
 
-  identity OPERATIONAL_STATE_ENABLED {
-    base OPERATIONAL_STATE;
+  identity OPERATIONAL_STATE_TYPE_ENABLED {
+    base OPERATIONAL_STATE_TYPE;
     description
       "none";
   }
 
-  identity OPERATIONAL_STATE_DISABLED {
-    base OPERATIONAL_STATE;
+  identity OPERATIONAL_STATE_TYPE_DISABLED {
+    base OPERATIONAL_STATE_TYPE;
     description
       "none";
   }
 
-  identity OPERATIONAL_STATE_NOT_YET_DEFINED {
-    base OPERATIONAL_STATE;
+  identity OPERATIONAL_STATE_TYPE_NOT_YET_DEFINED {
+    base OPERATIONAL_STATE_TYPE;
     description
       "none";
   }
 
-  identity ADMINISTRATIVE_STATE {
+  identity ADMINISTRATIVE_STATE_TYPE {
     description
       "none";
   }
 
-  identity ADMINISTRATIVE_STATE_UNLOCKED {
-    base ADMINISTRATIVE_STATE;
+  identity ADMINISTRATIVE_STATE_TYPE_UNLOCKED {
+    base ADMINISTRATIVE_STATE_TYPE;
     description
       "none";
   }
 
-  identity ADMINISTRATIVE_STATE_LOCKED {
-    base ADMINISTRATIVE_STATE;
+  identity ADMINISTRATIVE_STATE_TYPE_LOCKED {
+    base ADMINISTRATIVE_STATE_TYPE;
     description
       "none";
   }
 
-  identity ADMINISTRATIVE_STATE_SHUTTING_DOWN {
-    base ADMINISTRATIVE_STATE;
+  identity ADMINISTRATIVE_STATE_TYPE_SHUTTING_DOWN {
+    base ADMINISTRATIVE_STATE_TYPE;
     description
       "none";
   }
 
-  identity ADMINISTRATIVE_STATE_NOT_YET_DEFINED {
-    base ADMINISTRATIVE_STATE;
+  identity ADMINISTRATIVE_STATE_TYPE_NOT_YET_DEFINED {
+    base ADMINISTRATIVE_STATE_TYPE;
     description
       "none";
   }
@@ -741,17 +753,17 @@ module hybrid-mw-structure {
       "According to ITU-T M.3160";
   }
 
-  typedef operational-state {
+  typedef operational-state-type {
     type identityref {
-      base OPERATIONAL_STATE;
+      base OPERATIONAL_STATE_TYPE;
     }
     description
       "The list of valid operational states for the connection.";
   }
 
-  typedef administrative-state {
+  typedef administrative-state-type {
     type identityref {
-      base ADMINISTRATIVE_STATE;
+      base ADMINISTRATIVE_STATE_TYPE;
     }
     description
       "For more information on Administrative State, See ITU-T Recs. X.731 and M.3100.";
@@ -815,7 +827,7 @@ module hybrid-mw-structure {
         "The number of segments, which is configured by Structure::StructureConfiguration::tdmReservedNumberOfSegements, has to be reserved for TDM. Starting from the lowest index value, these segments have to be marked with a 'true' in segmentIsReservedForTdm.\n";
     }
     leaf operational-status {
-      type operational-state;
+      type operational-state-type;
       config false;
       description
         "Current operational status of each segment.";
