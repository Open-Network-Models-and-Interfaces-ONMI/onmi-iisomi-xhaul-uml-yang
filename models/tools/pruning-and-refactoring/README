#  pruning-and-refactoring
this is the place where the configuration of different UML modules take place, so that these modules are converted into YANG files through the automated uml2yang converter.

# Step to follow

## Rre-Requisits
make your that xmi-converter is installed as mentioned in the README under the following link
https://github.com/OpenNetworkingFoundation/5G-xHaul/tree/experimental/models/tools


##  Create a new Module
pull the latest version from github (experimental) if avaialble
  $ git status
  $ git pull origin experimental
  $ cd models/tools/pruning-and-refactoring
  $ mkdir <module-name> e.g ip-interface
    Note: Remember that the naming convenstion is important. e.g. IpInterface => ip-interface
  $ cd <module-name>
  $ mkdir –R src/main/resources
  $ mkdir <UMLFileName> e.g. "IpInterface"
  $ mkdir "xslt"
  - copy the existing xslts from another module under the "xslt" directory 
  "global-functions.xslt" & prune-and-refactor-<module-name>.xsl
  -  rename the existing module to "prune-and-refactor-<module-name>.xslt> to the given module name
  e.g. prune-and-refactor-air-interface.xslt
  
##  Enter details of the currently created module under the pom.xml 
  $ cd models/tools/pruning-and-refactoring
   edit the pom file
   <modules>
     <module> <module-name></module>
     e.g. <module> air-interface </module>
   </modules>
   <transformationSet>
              <dir>${basedir}/src/main/resources/<UMLFileName></dir>
              e.g. 
              <dir>${basedir}/src/main/resources/HybridMwStructure</dir>
    ....
    </transformationSet>       
    
   add path of the xslt file  
   <stylesheet>${basedir}/src/main/resources/xslt/prune-and-refactor-<module-name>.xslt</stylesheet>
    e.g.
       <stylesheet>${basedir}/src/main/resources/xslt/prune-and-refactor-air-interface.xslt</stylesheet>
    
## copy UML file and the related resources for the given module
  $ cd models/tools/pruning-and-refactoring/hybrid-mw-structure/src/main/resources
  $ mkdir <UMLFileName> e.g. “HybridMwStructure” 
  $ cd models/tools/pruning-and-refactoring/hybrid-mw-structure/src/main/resources/<UMLFileName>
  paste the following files and directories here. 
   - CommonDataTyes
   - Gendoc
   - UmlProfiles
   - <UMLFileName>.di 
   - <UMLFileName>-notation
   - <UMLFileName>.uml
  create a pom.xml file under the newly created module
  $ cd models/tools/pruning-and-refactoring/<module-name>/src/main/resources
  create a pom.xml file  (an existing local pom file from another module can be copied and edited)
  - add the <uml-module> as an artifact
     <artifactId><module-name></artifactId>
     e.g. <artifactId>air-interface</artifactId>

## convert UML to YANG 
  $ cd "/5G-xHaul/models/tools"
  $ mvn clean install
  In case of successful execution, go the to following directory to find the generated yang files and the yang trees.
  $ cd /5G-xHaul/models/tools/distribution
